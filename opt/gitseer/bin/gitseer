#!/usr/bin/env bash

# Author: Adam Eberlin
# Website: https://github.com/aeberlin/gitseer

# Set script vars
GS_USER="${1}"
GS_PERMISSIONS="${2}"
GS_COMMAND="${SSH_ORIGINAL_COMMAND}"

# Echo to STDERR snippet
echoerr() { echo "$@" 1>&2; }

# Check that required vars are set
if [ -z "${GS_USER}" ] || [ "${GS_USER}" = "" ]; then exit 1; fi
if [ -z "${GS_PERMISSIONS}" ] || [ "${GS_PERMISSIONS}" = "" ]; then exit 1; fi
if [ -z "${GS_COMMAND}" ] || [ "${GS_COMMAND}" = "" ]; then exit 1; fi

# Get base command
GS_BASE_COMMAND=""; for i in ${GS_COMMAND}; do GS_BASE_COMMAND="${i}"; break; done

# Get remote address
GS_REMOTE_ADDR=""; for i in ${SSH_CLIENT}; do GS_REMOTE_ADDR="${i}"; break; done

authuser() {
  if [ "${PERMISSIONS}" = 'r' ] && [ "${GS_BASE_COMMAND}" = "git-receive-pack" ]; then
    echo 1
  fi
  if [ "${PERMISSIONS}" = 'rw' ] && [ "${GS_BASE_COMMAND}" = "git-upload-pack" ]; then
    echo 1
  fi
}

# This is ugly, I'll fix eventually.
if [ -n authuser ]; then
  echoerr "gitseer: user '${GS_USER}@${GS_REMOTE_ADDR}' authorized for '${GS_BASE_COMMAND}'"
  git shell -c "${GS_COMMAND}"
  exit 0
fi

echoerr "gitseer: user '${GS_USER}@${GS_REMOTE_ADDR}' not authorized for '${GS_BASE_COMMAND}'"
exit 1